#ifndef PROCESS_H
#define PROCESS_H

#include <string>
/*
Basic class for Process representation
It contains relevant attributes as shown below
*/
class Process {
 public:
  // Constructor to initialize the PID.
  Process(int pid);
  int Pid();                               
  std::string User();                      
  std::string Command();                   
  float CpuUtilization();                  
  std::string Ram();                      
  long int UpTime();                       
  bool operator<(Process const& a) const;  

// Declare any necessary private members
 private:
    // process ID (PID)
    int processId_;
    // user ID (UID)
    std::string userID_;
    // command that generated by process
    std::string command_;

    //Cpu Usage
    float cpuUsage_;
    
    //Memory Utilization
    std::string ram_;
    // the age of process time.
    long uptime_;
    // CPU values of a process
    enum ProcessCPUStates{
        kUtime_ = 0,
        kStime_,
        kCutime_,
        kCstime_,
        kStarttime_,
    };

    void calculateCpuUsage();
    void determineUser();
    void determineCommand();
    void determineRam();
    void determineUpdate();

};

#endif